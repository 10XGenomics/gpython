// Test data generated by make_compile_test.py - do not edit

package compile

import (
	"github.com/ncw/gpython/py"
)

var compileTestData = []struct {
	in            string
	mode          string // exec, eval or single
	out           *py.Code
	exceptionType *py.Type
	errString     string
}{
	{"1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"hello\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.String("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"b\"hello\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Bytes("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"+1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"-1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x18\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"*\"b\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x14\x53",
		Consts:         []py.Object{py.String("a"), py.String("b")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"/1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1b\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"%1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x16\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"**1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x13\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"<<1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3e\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\">>1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3f\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"|1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x42\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"^1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x41\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"&1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x40\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"//1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1a\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a+a", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x00\x00\x17\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"a\"*\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x14\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"~ \"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0f\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"not \"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0c\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"+\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0a\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"-\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0b\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"1 and 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"1 and 2 and 3 and 4", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x15\x00\x64\x01\x00\x6f\x15\x00\x64\x02\x00\x6f\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"1 and 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"1 or 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"1 or 2 or 3 or 4", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x15\x00\x64\x01\x00\x70\x15\x00\x64\x02\x00\x70\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"1\"+\"2\"*\"3\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"\"1\"+(\"2\"*\"3\")", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(1+\"2\")*\"3\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x64\x02\x00\x14\x53",
		Consts:         []py.Object{py.Int(1), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a if b else c)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0c\x00\x65\x01\x00\x6e\x03\x00\x65\x02\x00\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"b", "a", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a == b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a != b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a < b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a <= b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a > b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a >= b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x05\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a is b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x08\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a is not b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x09\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a in b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x06\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a not in b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x07\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a < b < c)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x17\x00\x65\x02\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a < b < c < d)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x03\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a < b < c < d < e)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      5,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x03\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x04\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d", "e"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"()", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x66\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a,)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x66\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a,b)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x66\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a,b,c,d)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x66\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x67\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[1,1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x67\x02\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[1,1,3,1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x64\x01\x00\x64\x00\x00\x67\x04\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(3)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[a]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[a,b]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x67\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"[a,b,c,d]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x67\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"True", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.True},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"False", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.False},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"None", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a.b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a.b.c", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x6a\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a.b.c.d", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x6a\x02\x00\x6a\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"{}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x69\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"{1:2,a:b}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x69\x02\x00\x64\x00\x00\x64\x01\x00\x36\x65\x00\x00\x65\x01\x00\x36\x53",
		Consts:         []py.Object{py.Int(2), py.Int(1)},
		Names:          []string{"b", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"{1}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x68\x01\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"{1,2,a,b}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x65\x00\x00\x65\x01\x00\x68\x04\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"lambda: 0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x01\x00\x53",
			Consts:         []py.Object{py.None, py.Int(0)},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "<lambda>",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("<lambda>")},
		Names:       []string{},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"lambda x: 2*x", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        1,
			Stacksize:      2,
			Flags:          67,
			Code:           "\x64\x01\x00\x7c\x00\x00\x14\x53",
			Consts:         []py.Object{py.None, py.Int(2)},
			Names:          []string{},
			Varnames:       []string{"x"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "<lambda>",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("<lambda>")},
		Names:       []string{},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"(a+b)", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x17\x01\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"assert a, \"hello\"", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x73\x12\x00\x74\x01\x00\x64\x00\x00\x83\x01\x00\x82\x01\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.String("hello"), py.None},
		Names:          []string{"a", "AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"assert 1, 2", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x73\x12\x00\x74\x00\x00\x64\x01\x00\x83\x01\x00\x82\x01\x00\x64\x02\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.None},
		Names:          []string{"AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"assert a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x73\x0c\x00\x74\x01\x00\x82\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"assert 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x73\x0c\x00\x74\x00\x00\x82\x01\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a = 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a = b = c = 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x04\x5a\x00\x00\x04\x5a\x01\x00\x5a\x02\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a+=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x37\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a-=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x38\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a*=b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x39\x5a\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a/=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x1d\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a%=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x3b\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a**=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x43\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a<<=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4b\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a>>=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4c\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a|=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4f\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a^=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4e\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a&=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4d\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"a//=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x1c\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"del a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x5b\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"del a, b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x5b\x00\x00\x5b\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"raise", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x82\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"raise a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x82\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"raise a from b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x82\x02\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"if a: b = c", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0f\x00\x65\x01\x00\x5a\x02\x00\x6e\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x06\x00",
	}, nil, ""},
	{"if a:\n b = c\nelse:\n c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0f\x00\x65\x01\x00\x5a\x02\x00\x6e\x06\x00\x65\x03\x00\x5a\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x06\x01\x09\x02",
	}, nil, ""},
	{"while a:\n b = c", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x10\x00\x65\x00\x00\x72\x12\x00\x65\x01\x00\x5a\x02\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01",
	}, nil, ""},
	{"while a:\n b = c\nelse:\n b = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x16\x00\x65\x00\x00\x72\x12\x00\x65\x01\x00\x5a\x02\x00\x71\x03\x00\x57\x65\x03\x00\x5a\x02\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x0a\x02",
	}, nil, ""},
	{"while a:\n if b: break\n b = c\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x1a\x00\x65\x00\x00\x72\x1c\x00\x65\x01\x00\x72\x13\x00\x50\x6e\x00\x00\x65\x02\x00\x5a\x01\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x06\x00\x04\x01",
	}, nil, ""},
	{"while a:\n if b: continue\n b = c\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x1c\x00\x65\x00\x00\x72\x1e\x00\x65\x01\x00\x72\x15\x00\x71\x03\x00\x6e\x00\x00\x65\x02\x00\x5a\x01\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x06\x00\x06\x01",
	}, nil, ""},
	{"continue", "exec", nil, py.SyntaxError, "'continue' not properly in loop"},
	{"break", "exec", nil, py.SyntaxError, "'break' outside loop"},
	{"for a in b: pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x0e\x00\x65\x00\x00\x44\x5d\x06\x00\x5a\x01\x00\x71\x07\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x00",
	}, nil, ""},
	{"for a in b:\n if a:\n  break\n c = e\nelse: c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x24\x00\x65\x00\x00\x44\x5d\x16\x00\x5a\x01\x00\x65\x01\x00\x72\x17\x00\x50\x6e\x00\x00\x65\x02\x00\x5a\x03\x00\x71\x07\x00\x57\x65\x04\x00\x5a\x03\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a", "e", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x01\x06\x01\x04\x01\x0a\x01",
	}, nil, ""},
	{"for a in b:\n if a:\n  continue\n c = e\nelse: c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x26\x00\x65\x00\x00\x44\x5d\x18\x00\x5a\x01\x00\x65\x01\x00\x72\x19\x00\x71\x07\x00\x6e\x00\x00\x65\x02\x00\x5a\x03\x00\x71\x07\x00\x57\x65\x04\x00\x5a\x03\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a", "e", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x01\x06\x01\x06\x01\x0a\x01",
	}, nil, ""},
	{"f()", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x83\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x83\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a,b,c)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x83\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(A=a)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x65\x01\x00\x83\x00\x01\x53",
		Consts:         []py.Object{py.String("A")},
		Names:          []string{"f", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a, b, C=d, D=d)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      7,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x64\x00\x00\x65\x03\x00\x64\x01\x00\x65\x03\x00\x83\x02\x02\x53",
		Consts:         []py.Object{py.String("C"), py.String("D")},
		Names:          []string{"f", "a", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(*args)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x8c\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "args"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(*args, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x8e\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "args", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(**kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x8d\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a, b, *args)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x8c\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a", "b", "args"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a, b, *args, d=e, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      7,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x64\x00\x00\x65\x03\x00\x65\x04\x00\x65\x05\x00\x8e\x02\x01\x53",
		Consts:         []py.Object{py.String("d")},
		Names:          []string{"f", "a", "b", "e", "args", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"f(a, d=e, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      5,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x64\x00\x00\x65\x02\x00\x65\x03\x00\x8d\x01\x01\x53",
		Consts:         []py.Object{py.String("d")},
		Names:          []string{"f", "a", "e", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, nil, ""},
	{"def fn(): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        1,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a,b,c): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       3,
			Kwonlyargcount: 0,
			Nlocals:        3,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a,b=1,c=2): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x84\x02\x00\x5a\x00\x00\x64\x04\x00\x53",
		Consts: []py.Object{py.Int(1), py.Int(2), &py.Code{
			Argcount:       3,
			Kwonlyargcount: 0,
			Nlocals:        3,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a,*arg,b=1,c=2): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      6,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x84\x00\x02\x5a\x00\x00\x64\x06\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        4,
			Stacksize:      1,
			Flags:          71,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a,*arg,b=1,c=2,**kwargs): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      6,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x84\x00\x02\x5a\x00\x00\x64\x06\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        5,
			Stacksize:      1,
			Flags:          79,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg", "kwargs"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a:\"a\",*arg:\"arg\",b:\"b\"=1,c:\"c\"=2,**kwargs:\"kw\") -> \"ret\": pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      13,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x64\x07\x00\x64\x08\x00\x64\x09\x00\x64\x0a\x00\x90\x07\x00\x84\x00\x02\x5a\x00\x00\x64\x0b\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), py.String("a"), py.String("arg"), py.String("kw"), py.String("ret"), py.Tuple{py.String("a"), py.String("arg"), py.String("b"), py.String("c"), py.String("kwargs"), py.String("return")}, &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        5,
			Stacksize:      1,
			Flags:          79,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg", "kwargs"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(): a+b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      2,
			Flags:          67,
			Code:           "\x74\x00\x00\x74\x01\x00\x17\x01\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{"a", "b"},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a,b): a+b+c+d", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       2,
			Kwonlyargcount: 0,
			Nlocals:        2,
			Stacksize:      2,
			Flags:          67,
			Code:           "\x7c\x00\x00\x7c\x01\x00\x17\x74\x00\x00\x17\x74\x01\x00\x17\x01\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{"c", "d"},
			Varnames:       []string{"a", "b"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(a):\n    global b\n    b = a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        1,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x7c\x00\x00\x61\x00\x00\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{"b"},
			Varnames:       []string{"a"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "\x00\x02",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(): return", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn(): return a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x74\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{"a"},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def fn():\n \"docstring\"\n return True", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x01\x00\x53",
			Consts:         []py.Object{py.String("docstring"), py.True},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "\x00\x02",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def outer(o):\n    def inner(i):\n       x = 2", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        2,
			Stacksize:      2,
			Flags:          67,
			Code:           "\x64\x01\x00\x64\x02\x00\x84\x00\x00\x7d\x01\x00\x64\x00\x00\x53",
			Consts: []py.Object{py.None, &py.Code{
				Argcount:       1,
				Kwonlyargcount: 0,
				Nlocals:        2,
				Stacksize:      1,
				Flags:          83,
				Code:           "\x64\x01\x00\x7d\x01\x00\x64\x00\x00\x53",
				Consts:         []py.Object{py.None, py.Int(2)},
				Names:          []string{},
				Varnames:       []string{"i", "x"},
				Freevars:       []string{},
				Cellvars:       []string{},
				Filename:       "<string>",
				Name:           "inner",
				Firstlineno:    2,
				Lnotab:         "\x00\x01",
			}, py.String("outer.<locals>.inner")},
			Names:       []string{},
			Varnames:    []string{"o", "inner"},
			Freevars:    []string{},
			Cellvars:    []string{},
			Filename:    "<string>",
			Name:        "outer",
			Firstlineno: 1,
			Lnotab:      "\x00\x01",
		}, py.String("outer"), py.None},
		Names:       []string{"outer"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def outer(o1,o2):\n    x = 1\n    def inner(i1,i2):\n       nonlocal x\n       x = 2\n       def inner2(s):\n           return 2*s\n       f = inner2(x)\n       l = o1+o2+i1+i2+f\n       return l\n    return inner", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       2,
			Kwonlyargcount: 0,
			Nlocals:        3,
			Stacksize:      3,
			Flags:          3,
			Code:           "\x64\x01\x00\x89\x02\x00\x87\x00\x00\x87\x01\x00\x87\x02\x00\x66\x03\x00\x64\x02\x00\x64\x03\x00\x86\x00\x00\x7d\x02\x00\x7c\x02\x00\x53",
			Consts: []py.Object{py.None, py.Int(1), &py.Code{
				Argcount:       2,
				Kwonlyargcount: 0,
				Nlocals:        5,
				Stacksize:      2,
				Flags:          19,
				Code:           "\x64\x01\x00\x89\x02\x00\x64\x02\x00\x64\x03\x00\x84\x00\x00\x7d\x02\x00\x7c\x02\x00\x88\x02\x00\x83\x01\x00\x7d\x03\x00\x88\x00\x00\x88\x01\x00\x17\x7c\x00\x00\x17\x7c\x01\x00\x17\x7c\x03\x00\x17\x7d\x04\x00\x7c\x04\x00\x53",
				Consts: []py.Object{py.None, py.Int(2), &py.Code{
					Argcount:       1,
					Kwonlyargcount: 0,
					Nlocals:        1,
					Stacksize:      2,
					Flags:          83,
					Code:           "\x64\x01\x00\x7c\x00\x00\x14\x53",
					Consts:         []py.Object{py.None, py.Int(2)},
					Names:          []string{},
					Varnames:       []string{"s"},
					Freevars:       []string{},
					Cellvars:       []string{},
					Filename:       "<string>",
					Name:           "inner2",
					Firstlineno:    6,
					Lnotab:         "\x00\x01",
				}, py.String("outer.<locals>.inner.<locals>.inner2")},
				Names:       []string{},
				Varnames:    []string{"i1", "i2", "inner2", "f", "l"},
				Freevars:    []string{"o1", "o2", "x"},
				Cellvars:    []string{},
				Filename:    "<string>",
				Name:        "inner",
				Firstlineno: 3,
				Lnotab:      "\x00\x02\x06\x01\x0c\x02\x0c\x01\x16\x01",
			}, py.String("outer.<locals>.inner")},
			Names:       []string{},
			Varnames:    []string{"o1", "o2", "inner"},
			Freevars:    []string{},
			Cellvars:    []string{"o1", "o2", "x"},
			Filename:    "<string>",
			Name:        "outer",
			Firstlineno: 1,
			Lnotab:      "\x00\x01\x06\x01\x18\x08",
		}, py.String("outer"), py.None},
		Names:       []string{"outer"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
	{"def outer(o):\n    a = 17\n    return lambda x: o+a+x", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        1,
			Stacksize:      3,
			Flags:          3,
			Code:           "\x64\x01\x00\x89\x00\x00\x87\x00\x00\x87\x01\x00\x66\x02\x00\x64\x02\x00\x64\x03\x00\x86\x00\x00\x53",
			Consts: []py.Object{py.None, py.Int(17), &py.Code{
				Argcount:       1,
				Kwonlyargcount: 0,
				Nlocals:        1,
				Stacksize:      2,
				Flags:          19,
				Code:           "\x88\x01\x00\x88\x00\x00\x17\x7c\x00\x00\x17\x53",
				Consts:         []py.Object{py.None},
				Names:          []string{},
				Varnames:       []string{"x"},
				Freevars:       []string{"a", "o"},
				Cellvars:       []string{},
				Filename:       "<string>",
				Name:           "<lambda>",
				Firstlineno:    3,
				Lnotab:         "",
			}, py.String("outer.<locals>.<lambda>")},
			Names:       []string{},
			Varnames:    []string{"o"},
			Freevars:    []string{},
			Cellvars:    []string{"a", "o"},
			Filename:    "<string>",
			Name:        "outer",
			Firstlineno: 1,
			Lnotab:      "\x00\x01\x06\x01",
		}, py.String("outer"), py.None},
		Names:       []string{"outer"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, nil, ""},
}
