// Test data generated by make_compile_test.py - do not edit

package compile

import (
	"github.com/ncw/gpython/py"
)

var compileTestData = []struct {
	in   string
	mode string // exec, eval or single
	out  py.Code
	dis  string
}{
	{"1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 RETURN_VALUE\n"},
	{"\"hello\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.String("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('hello')\n              3 RETURN_VALUE\n"},
	{"a", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 RETURN_VALUE\n"},
	{"b\"hello\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Bytes("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (b'hello')\n              3 RETURN_VALUE\n"},
	{"\"a\"+1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_ADD\n              7 RETURN_VALUE\n"},
	{"\"a\"-1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x18\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_SUBTRACT\n              7 RETURN_VALUE\n"},
	{"\"a\"*\"b\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x14\x53",
		Consts:         []py.Object{py.String("a"), py.String("b")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 ('b')\n              6 BINARY_MULTIPLY\n              7 RETURN_VALUE\n"},
	{"\"a\"/1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1b\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_TRUE_DIVIDE\n              7 RETURN_VALUE\n"},
	{"\"a\"%1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x16\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_MODULO\n              7 RETURN_VALUE\n"},
	{"\"a\"**1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x13\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_POWER\n              7 RETURN_VALUE\n"},
	{"\"a\"<<1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3e\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_LSHIFT\n              7 RETURN_VALUE\n"},
	{"\"a\">>1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3f\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_RSHIFT\n              7 RETURN_VALUE\n"},
	{"\"a\"|1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x42\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_OR\n              7 RETURN_VALUE\n"},
	{"\"a\"^1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x41\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_XOR\n              7 RETURN_VALUE\n"},
	{"\"a\"&1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x40\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_AND\n              7 RETURN_VALUE\n"},
	{"\"a\"//1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1a\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_FLOOR_DIVIDE\n              7 RETURN_VALUE\n"},
	{"a+a", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x00\x00\x17\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                0 (a)\n              6 BINARY_ADD\n              7 RETURN_VALUE\n"},
	{"\"a\"*\"a\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x14\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               0 ('a')\n              6 BINARY_MULTIPLY\n              7 RETURN_VALUE\n"},
	{"~ \"a\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0f\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_INVERT\n              4 RETURN_VALUE\n"},
	{"not \"a\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0c\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_NOT\n              4 RETURN_VALUE\n"},
	{"+\"a\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0a\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_POSITIVE\n              4 RETURN_VALUE\n"},
	{"-\"a\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0b\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_NEGATIVE\n              4 RETURN_VALUE\n"},
	{"1 and 2", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP     9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n"},
	{"1 and 2 and 3 and 4", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x15\x00\x64\x01\x00\x6f\x15\x00\x64\x02\x00\x6f\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP    21\n              6 LOAD_CONST               1 (2)\n              9 JUMP_IF_FALSE_OR_POP    21\n             12 LOAD_CONST               2 (3)\n             15 JUMP_IF_FALSE_OR_POP    21\n             18 LOAD_CONST               3 (4)\n        >>   21 RETURN_VALUE\n"},
	{"1 and 2", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP     9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n"},
	{"1 or 2", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_TRUE_OR_POP      9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n"},
	{"1 or 2 or 3 or 4", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x15\x00\x64\x01\x00\x70\x15\x00\x64\x02\x00\x70\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_TRUE_OR_POP     21\n              6 LOAD_CONST               1 (2)\n              9 JUMP_IF_TRUE_OR_POP     21\n             12 LOAD_CONST               2 (3)\n             15 JUMP_IF_TRUE_OR_POP     21\n             18 LOAD_CONST               3 (4)\n        >>   21 RETURN_VALUE\n"},
	{"\"1\"+\"2\"*\"3\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('1')\n              3 LOAD_CONST               1 ('2')\n              6 LOAD_CONST               2 ('3')\n              9 BINARY_MULTIPLY\n             10 BINARY_ADD\n             11 RETURN_VALUE\n"},
	{"\"1\"+(\"2\"*\"3\")", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('1')\n              3 LOAD_CONST               1 ('2')\n              6 LOAD_CONST               2 ('3')\n              9 BINARY_MULTIPLY\n             10 BINARY_ADD\n             11 RETURN_VALUE\n"},
	{"(1+\"2\")*\"3\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x64\x02\x00\x14\x53",
		Consts:         []py.Object{py.Int(1), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               1 ('2')\n              6 BINARY_ADD\n              7 LOAD_CONST               2 ('3')\n             10 BINARY_MULTIPLY\n             11 RETURN_VALUE\n"},
	{"(a if b else c)+0", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0c\x00\x65\x01\x00\x6e\x03\x00\x65\x02\x00\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"b", "a", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (b)\n              3 POP_JUMP_IF_FALSE       12\n              6 LOAD_NAME                1 (a)\n              9 JUMP_FORWARD             3 (to 15)\n        >>   12 LOAD_NAME                2 (c)\n        >>   15 LOAD_CONST               0 (0)\n             18 BINARY_ADD\n             19 RETURN_VALUE\n"},
	{"a == b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               2 (==)\n              9 RETURN_VALUE\n"},
	{"a != b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               3 (!=)\n              9 RETURN_VALUE\n"},
	{"a < b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               0 (<)\n              9 RETURN_VALUE\n"},
	{"a <= b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               1 (<=)\n              9 RETURN_VALUE\n"},
	{"a > b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               4 (>)\n              9 RETURN_VALUE\n"},
	{"a >= b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x05\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               5 (>=)\n              9 RETURN_VALUE\n"},
	{"a is b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x08\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               8 (is)\n              9 RETURN_VALUE\n"},
	{"a is not b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x09\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               9 (is not)\n              9 RETURN_VALUE\n"},
	{"a in b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x06\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               6 (in)\n              9 RETURN_VALUE\n"},
	{"a not in b", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x07\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               7 (not in)\n              9 RETURN_VALUE\n"},
	{"(a < b < c)+0", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x17\x00\x65\x02\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    23\n             14 LOAD_NAME                2 (c)\n             17 COMPARE_OP               0 (<)\n             20 JUMP_FORWARD             2 (to 25)\n        >>   23 ROT_TWO\n             24 POP_TOP\n        >>   25 LOAD_CONST               0 (0)\n             28 BINARY_ADD\n             29 RETURN_VALUE\n"},
	{"(a < b < c < d)+0", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x03\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    34\n             14 LOAD_NAME                2 (c)\n             17 DUP_TOP\n             18 ROT_THREE\n             19 COMPARE_OP               0 (<)\n             22 JUMP_IF_FALSE_OR_POP    34\n             25 LOAD_NAME                3 (d)\n             28 COMPARE_OP               0 (<)\n             31 JUMP_FORWARD             2 (to 36)\n        >>   34 ROT_TWO\n             35 POP_TOP\n        >>   36 LOAD_CONST               0 (0)\n             39 BINARY_ADD\n             40 RETURN_VALUE\n"},
	{"(a < b < c < d < e)+0", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      5,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x03\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x04\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d", "e"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    45\n             14 LOAD_NAME                2 (c)\n             17 DUP_TOP\n             18 ROT_THREE\n             19 COMPARE_OP               0 (<)\n             22 JUMP_IF_FALSE_OR_POP    45\n             25 LOAD_NAME                3 (d)\n             28 DUP_TOP\n             29 ROT_THREE\n             30 COMPARE_OP               0 (<)\n             33 JUMP_IF_FALSE_OR_POP    45\n             36 LOAD_NAME                4 (e)\n             39 COMPARE_OP               0 (<)\n             42 JUMP_FORWARD             2 (to 47)\n        >>   45 ROT_TWO\n             46 POP_TOP\n        >>   47 LOAD_CONST               0 (0)\n             50 BINARY_ADD\n             51 RETURN_VALUE\n"},
	{"()", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x66\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_TUPLE              0\n              3 RETURN_VALUE\n"},
	{"(a,)", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x66\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 BUILD_TUPLE              1\n              6 RETURN_VALUE\n"},
	{"(a,b)", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x66\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 BUILD_TUPLE              2\n              9 RETURN_VALUE\n"},
	{"(a,b,c,d)", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x66\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 LOAD_NAME                2 (c)\n              9 LOAD_NAME                3 (d)\n             12 BUILD_TUPLE              4\n             15 RETURN_VALUE\n"},
	{"[]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x67\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_LIST               0\n              3 RETURN_VALUE\n"},
	{"[1]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 BUILD_LIST               1\n              6 RETURN_VALUE\n"},
	{"[1,1]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x67\x02\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               0 (1)\n              6 BUILD_LIST               2\n              9 RETURN_VALUE\n"},
	{"[1,1,3,1]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x64\x01\x00\x64\x00\x00\x67\x04\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(3)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               0 (1)\n              6 LOAD_CONST               1 (3)\n              9 LOAD_CONST               0 (1)\n             12 BUILD_LIST               4\n             15 RETURN_VALUE\n"},
	{"[a]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 BUILD_LIST               1\n              6 RETURN_VALUE\n"},
	{"[a,b]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x67\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 BUILD_LIST               2\n              9 RETURN_VALUE\n"},
	{"[a,b,c,d]", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x67\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 LOAD_NAME                2 (c)\n              9 LOAD_NAME                3 (d)\n             12 BUILD_LIST               4\n             15 RETURN_VALUE\n"},
}
