// Test data generated by make_compile_test.py - do not edit

package compile

import (
	"github.com/ncw/gpython/py"
)

var compileTestData = []struct {
	in            string
	mode          string // exec, eval or single
	out           *py.Code
	dis           string
	exceptionType *py.Type
	errString     string
}{
	{"1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 RETURN_VALUE\n", nil, ""},
	{"\"hello\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.String("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('hello')\n              3 RETURN_VALUE\n", nil, ""},
	{"a", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 RETURN_VALUE\n", nil, ""},
	{"b\"hello\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Bytes("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (b'hello')\n              3 RETURN_VALUE\n", nil, ""},
	{"\"a\"+1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_ADD\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"-1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x18\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_SUBTRACT\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"*\"b\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x14\x53",
		Consts:         []py.Object{py.String("a"), py.String("b")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 ('b')\n              6 BINARY_MULTIPLY\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"/1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1b\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_TRUE_DIVIDE\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"%1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x16\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_MODULO\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"**1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x13\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_POWER\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"<<1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3e\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_LSHIFT\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\">>1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3f\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_RSHIFT\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"|1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x42\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_OR\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"^1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x41\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_XOR\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"&1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x40\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_AND\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"//1", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1a\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_FLOOR_DIVIDE\n              7 RETURN_VALUE\n", nil, ""},
	{"a+a", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x00\x00\x17\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                0 (a)\n              6 BINARY_ADD\n              7 RETURN_VALUE\n", nil, ""},
	{"\"a\"*\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x14\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               0 ('a')\n              6 BINARY_MULTIPLY\n              7 RETURN_VALUE\n", nil, ""},
	{"~ \"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0f\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_INVERT\n              4 RETURN_VALUE\n", nil, ""},
	{"not \"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0c\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_NOT\n              4 RETURN_VALUE\n", nil, ""},
	{"+\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0a\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_POSITIVE\n              4 RETURN_VALUE\n", nil, ""},
	{"-\"a\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x0b\x53",
		Consts:         []py.Object{py.String("a")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 UNARY_NEGATIVE\n              4 RETURN_VALUE\n", nil, ""},
	{"1 and 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP     9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n", nil, ""},
	{"1 and 2 and 3 and 4", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x15\x00\x64\x01\x00\x6f\x15\x00\x64\x02\x00\x6f\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP    21\n              6 LOAD_CONST               1 (2)\n              9 JUMP_IF_FALSE_OR_POP    21\n             12 LOAD_CONST               2 (3)\n             15 JUMP_IF_FALSE_OR_POP    21\n             18 LOAD_CONST               3 (4)\n        >>   21 RETURN_VALUE\n", nil, ""},
	{"1 and 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x6f\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_FALSE_OR_POP     9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n", nil, ""},
	{"1 or 2", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x09\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_TRUE_OR_POP      9\n              6 LOAD_CONST               1 (2)\n        >>    9 RETURN_VALUE\n", nil, ""},
	{"1 or 2 or 3 or 4", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x70\x15\x00\x64\x01\x00\x70\x15\x00\x64\x02\x00\x70\x15\x00\x64\x03\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.Int(3), py.Int(4)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 JUMP_IF_TRUE_OR_POP     21\n              6 LOAD_CONST               1 (2)\n              9 JUMP_IF_TRUE_OR_POP     21\n             12 LOAD_CONST               2 (3)\n             15 JUMP_IF_TRUE_OR_POP     21\n             18 LOAD_CONST               3 (4)\n        >>   21 RETURN_VALUE\n", nil, ""},
	{"\"1\"+\"2\"*\"3\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('1')\n              3 LOAD_CONST               1 ('2')\n              6 LOAD_CONST               2 ('3')\n              9 BINARY_MULTIPLY\n             10 BINARY_ADD\n             11 RETURN_VALUE\n", nil, ""},
	{"\"1\"+(\"2\"*\"3\")", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x14\x17\x53",
		Consts:         []py.Object{py.String("1"), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('1')\n              3 LOAD_CONST               1 ('2')\n              6 LOAD_CONST               2 ('3')\n              9 BINARY_MULTIPLY\n             10 BINARY_ADD\n             11 RETURN_VALUE\n", nil, ""},
	{"(1+\"2\")*\"3\"", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x64\x02\x00\x14\x53",
		Consts:         []py.Object{py.Int(1), py.String("2"), py.String("3")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               1 ('2')\n              6 BINARY_ADD\n              7 LOAD_CONST               2 ('3')\n             10 BINARY_MULTIPLY\n             11 RETURN_VALUE\n", nil, ""},
	{"(a if b else c)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0c\x00\x65\x01\x00\x6e\x03\x00\x65\x02\x00\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"b", "a", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (b)\n              3 POP_JUMP_IF_FALSE       12\n              6 LOAD_NAME                1 (a)\n              9 JUMP_FORWARD             3 (to 15)\n        >>   12 LOAD_NAME                2 (c)\n        >>   15 LOAD_CONST               0 (0)\n             18 BINARY_ADD\n             19 RETURN_VALUE\n", nil, ""},
	{"a == b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               2 (==)\n              9 RETURN_VALUE\n", nil, ""},
	{"a != b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               3 (!=)\n              9 RETURN_VALUE\n", nil, ""},
	{"a < b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               0 (<)\n              9 RETURN_VALUE\n", nil, ""},
	{"a <= b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               1 (<=)\n              9 RETURN_VALUE\n", nil, ""},
	{"a > b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               4 (>)\n              9 RETURN_VALUE\n", nil, ""},
	{"a >= b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x05\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               5 (>=)\n              9 RETURN_VALUE\n", nil, ""},
	{"a is b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x08\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               8 (is)\n              9 RETURN_VALUE\n", nil, ""},
	{"a is not b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x09\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               9 (is not)\n              9 RETURN_VALUE\n", nil, ""},
	{"a in b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x06\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               6 (in)\n              9 RETURN_VALUE\n", nil, ""},
	{"a not in b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x6b\x07\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 COMPARE_OP               7 (not in)\n              9 RETURN_VALUE\n", nil, ""},
	{"(a < b < c)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x17\x00\x65\x02\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    23\n             14 LOAD_NAME                2 (c)\n             17 COMPARE_OP               0 (<)\n             20 JUMP_FORWARD             2 (to 25)\n        >>   23 ROT_TWO\n             24 POP_TOP\n        >>   25 LOAD_CONST               0 (0)\n             28 BINARY_ADD\n             29 RETURN_VALUE\n", nil, ""},
	{"(a < b < c < d)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x22\x00\x65\x03\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    34\n             14 LOAD_NAME                2 (c)\n             17 DUP_TOP\n             18 ROT_THREE\n             19 COMPARE_OP               0 (<)\n             22 JUMP_IF_FALSE_OR_POP    34\n             25 LOAD_NAME                3 (d)\n             28 COMPARE_OP               0 (<)\n             31 JUMP_FORWARD             2 (to 36)\n        >>   34 ROT_TWO\n             35 POP_TOP\n        >>   36 LOAD_CONST               0 (0)\n             39 BINARY_ADD\n             40 RETURN_VALUE\n", nil, ""},
	{"(a < b < c < d < e)+0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      5,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x02\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x03\x00\x04\x03\x6b\x00\x00\x6f\x2d\x00\x65\x04\x00\x6b\x00\x00\x6e\x02\x00\x02\x01\x64\x00\x00\x17\x53",
		Consts:         []py.Object{py.Int(0)},
		Names:          []string{"a", "b", "c", "d", "e"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 DUP_TOP\n              7 ROT_THREE\n              8 COMPARE_OP               0 (<)\n             11 JUMP_IF_FALSE_OR_POP    45\n             14 LOAD_NAME                2 (c)\n             17 DUP_TOP\n             18 ROT_THREE\n             19 COMPARE_OP               0 (<)\n             22 JUMP_IF_FALSE_OR_POP    45\n             25 LOAD_NAME                3 (d)\n             28 DUP_TOP\n             29 ROT_THREE\n             30 COMPARE_OP               0 (<)\n             33 JUMP_IF_FALSE_OR_POP    45\n             36 LOAD_NAME                4 (e)\n             39 COMPARE_OP               0 (<)\n             42 JUMP_FORWARD             2 (to 47)\n        >>   45 ROT_TWO\n             46 POP_TOP\n        >>   47 LOAD_CONST               0 (0)\n             50 BINARY_ADD\n             51 RETURN_VALUE\n", nil, ""},
	{"()", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x66\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_TUPLE              0\n              3 RETURN_VALUE\n", nil, ""},
	{"(a,)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x66\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 BUILD_TUPLE              1\n              6 RETURN_VALUE\n", nil, ""},
	{"(a,b)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x66\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 BUILD_TUPLE              2\n              9 RETURN_VALUE\n", nil, ""},
	{"(a,b,c,d)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x66\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 LOAD_NAME                2 (c)\n              9 LOAD_NAME                3 (d)\n             12 BUILD_TUPLE              4\n             15 RETURN_VALUE\n", nil, ""},
	{"[]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x67\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_LIST               0\n              3 RETURN_VALUE\n", nil, ""},
	{"[1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 BUILD_LIST               1\n              6 RETURN_VALUE\n", nil, ""},
	{"[1,1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x67\x02\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               0 (1)\n              6 BUILD_LIST               2\n              9 RETURN_VALUE\n", nil, ""},
	{"[1,1,3,1]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x00\x00\x64\x01\x00\x64\x00\x00\x67\x04\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(3)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               0 (1)\n              6 LOAD_CONST               1 (3)\n              9 LOAD_CONST               0 (1)\n             12 BUILD_LIST               4\n             15 RETURN_VALUE\n", nil, ""},
	{"[a]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x67\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 BUILD_LIST               1\n              6 RETURN_VALUE\n", nil, ""},
	{"[a,b]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x67\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 BUILD_LIST               2\n              9 RETURN_VALUE\n", nil, ""},
	{"[a,b,c,d]", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x67\x04\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 LOAD_NAME                2 (c)\n              9 LOAD_NAME                3 (d)\n             12 BUILD_LIST               4\n             15 RETURN_VALUE\n", nil, ""},
	{"True", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.True},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (True)\n              3 RETURN_VALUE\n", nil, ""},
	{"False", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.False},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (False)\n              3 RETURN_VALUE\n", nil, ""},
	{"None", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (None)\n              3 RETURN_VALUE\n", nil, ""},
	{"a.b", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_ATTR                1 (b)\n              6 RETURN_VALUE\n", nil, ""},
	{"a.b.c", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x6a\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_ATTR                1 (b)\n              6 LOAD_ATTR                2 (c)\n              9 RETURN_VALUE\n", nil, ""},
	{"a.b.c.d", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x6a\x01\x00\x6a\x02\x00\x6a\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"a", "b", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_ATTR                1 (b)\n              6 LOAD_ATTR                2 (c)\n              9 LOAD_ATTR                3 (d)\n             12 RETURN_VALUE\n", nil, ""},
	{"{}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x69\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_MAP                0\n              3 RETURN_VALUE\n", nil, ""},
	{"{1:2,a:b}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x69\x02\x00\x64\x00\x00\x64\x01\x00\x36\x65\x00\x00\x65\x01\x00\x36\x53",
		Consts:         []py.Object{py.Int(2), py.Int(1)},
		Names:          []string{"b", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 BUILD_MAP                2\n              3 LOAD_CONST               0 (2)\n              6 LOAD_CONST               1 (1)\n              9 STORE_MAP\n             10 LOAD_NAME                0 (b)\n             13 LOAD_NAME                1 (a)\n             16 STORE_MAP\n             17 RETURN_VALUE\n", nil, ""},
	{"{1}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x68\x01\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 BUILD_SET                1\n              6 RETURN_VALUE\n", nil, ""},
	{"{1,2,a,b}", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x65\x00\x00\x65\x01\x00\x68\x04\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2)},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               1 (2)\n              6 LOAD_NAME                0 (a)\n              9 LOAD_NAME                1 (b)\n             12 BUILD_SET                4\n             15 RETURN_VALUE\n", nil, ""},
	{"lambda: 0", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x01\x00\x53",
			Consts:         []py.Object{py.None, py.Int(0)},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "<lambda>",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("<lambda>")},
		Names:       []string{},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 (<code object <lambda> at 0x7fe734191db0, file \"<string>\", line 1>)\n              3 LOAD_CONST               1 ('<lambda>')\n              6 MAKE_FUNCTION            0\n              9 RETURN_VALUE\n", nil, ""},
	{"pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (None)\n              3 RETURN_VALUE\n", nil, ""},
	{"(a+b)", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x17\x01\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 BINARY_ADD\n              7 POP_TOP\n              8 LOAD_CONST               0 (None)\n             11 RETURN_VALUE\n", nil, ""},
	{"assert a, \"hello\"", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x73\x12\x00\x74\x01\x00\x64\x00\x00\x83\x01\x00\x82\x01\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.String("hello"), py.None},
		Names:          []string{"a", "AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 POP_JUMP_IF_TRUE        18\n              6 LOAD_GLOBAL              1 (AssertionError)\n              9 LOAD_CONST               0 ('hello')\n             12 CALL_FUNCTION            1 (1 positional, 0 keyword pair)\n             15 RAISE_VARARGS            1\n        >>   18 LOAD_CONST               1 (None)\n             21 RETURN_VALUE\n", nil, ""},
	{"assert 1, 2", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x73\x12\x00\x74\x00\x00\x64\x01\x00\x83\x01\x00\x82\x01\x00\x64\x02\x00\x53",
		Consts:         []py.Object{py.Int(1), py.Int(2), py.None},
		Names:          []string{"AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 POP_JUMP_IF_TRUE        18\n              6 LOAD_GLOBAL              0 (AssertionError)\n              9 LOAD_CONST               1 (2)\n             12 CALL_FUNCTION            1 (1 positional, 0 keyword pair)\n             15 RAISE_VARARGS            1\n        >>   18 LOAD_CONST               2 (None)\n             21 RETURN_VALUE\n", nil, ""},
	{"assert a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x73\x0c\x00\x74\x01\x00\x82\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 POP_JUMP_IF_TRUE        12\n              6 LOAD_GLOBAL              1 (AssertionError)\n              9 RAISE_VARARGS            1\n        >>   12 LOAD_CONST               0 (None)\n             15 RETURN_VALUE\n", nil, ""},
	{"assert 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x73\x0c\x00\x74\x00\x00\x82\x01\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"AssertionError"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 POP_JUMP_IF_TRUE        12\n              6 LOAD_GLOBAL              0 (AssertionError)\n              9 RAISE_VARARGS            1\n        >>   12 LOAD_CONST               1 (None)\n             15 RETURN_VALUE\n", nil, ""},
	{"a = 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 STORE_NAME               0 (a)\n              6 LOAD_CONST               1 (None)\n              9 RETURN_VALUE\n", nil, ""},
	{"a = b = c = 1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x04\x5a\x00\x00\x04\x5a\x01\x00\x5a\x02\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 DUP_TOP\n              4 STORE_NAME               0 (a)\n              7 DUP_TOP\n              8 STORE_NAME               1 (b)\n             11 STORE_NAME               2 (c)\n             14 LOAD_CONST               1 (None)\n             17 RETURN_VALUE\n", nil, ""},
	{"a+=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x37\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_ADD\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a-=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x38\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_SUBTRACT\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a*=b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x39\x5a\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 INPLACE_MULTIPLY\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               0 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a/=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x1d\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_TRUE_DIVIDE\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a%=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x3b\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_MODULO\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a**=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x43\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_POWER\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a<<=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4b\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_LSHIFT\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a>>=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4c\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_RSHIFT\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a|=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4f\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_OR\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a^=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4e\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_XOR\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a&=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x4d\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_AND\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"a//=1", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x1c\x5a\x00\x00\x64\x01\x00\x53",
		Consts:         []py.Object{py.Int(1), py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_CONST               0 (1)\n              6 INPLACE_FLOOR_DIVIDE\n              7 STORE_NAME               0 (a)\n             10 LOAD_CONST               1 (None)\n             13 RETURN_VALUE\n", nil, ""},
	{"del a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x5b\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 DELETE_NAME              0 (a)\n              3 LOAD_CONST               0 (None)\n              6 RETURN_VALUE\n", nil, ""},
	{"del a, b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x5b\x00\x00\x5b\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 DELETE_NAME              0 (a)\n              3 DELETE_NAME              1 (b)\n              6 LOAD_CONST               0 (None)\n              9 RETURN_VALUE\n", nil, ""},
	{"raise", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x82\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 RAISE_VARARGS            0\n              3 LOAD_CONST               0 (None)\n              6 RETURN_VALUE\n", nil, ""},
	{"raise a", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x82\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 RAISE_VARARGS            1\n              6 LOAD_CONST               0 (None)\n              9 RETURN_VALUE\n", nil, ""},
	{"raise a from b", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x82\x02\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 LOAD_NAME                1 (b)\n              6 RAISE_VARARGS            2\n              9 LOAD_CONST               0 (None)\n             12 RETURN_VALUE\n", nil, ""},
	{"if a: b = c", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0f\x00\x65\x01\x00\x5a\x02\x00\x6e\x00\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x06\x00",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 POP_JUMP_IF_FALSE       15\n              6 LOAD_NAME                1 (c)\n              9 STORE_NAME               2 (b)\n             12 JUMP_FORWARD             0 (to 15)\n        >>   15 LOAD_CONST               0 (None)\n             18 RETURN_VALUE\n", nil, ""},
	{"if a:\n b = c\nelse:\n c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x72\x0f\x00\x65\x01\x00\x5a\x02\x00\x6e\x06\x00\x65\x03\x00\x5a\x01\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x06\x01\x09\x02",
	}, "  1           0 LOAD_NAME                0 (a)\n              3 POP_JUMP_IF_FALSE       15\n\n  2           6 LOAD_NAME                1 (c)\n              9 STORE_NAME               2 (b)\n             12 JUMP_FORWARD             6 (to 21)\n\n  4     >>   15 LOAD_NAME                3 (d)\n             18 STORE_NAME               1 (c)\n        >>   21 LOAD_CONST               0 (None)\n             24 RETURN_VALUE\n", nil, ""},
	{"while a:\n b = c", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x10\x00\x65\x00\x00\x72\x12\x00\x65\x01\x00\x5a\x02\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01",
	}, "  1           0 SETUP_LOOP              16 (to 19)\n        >>    3 LOAD_NAME                0 (a)\n              6 POP_JUMP_IF_FALSE       18\n\n  2           9 LOAD_NAME                1 (c)\n             12 STORE_NAME               2 (b)\n             15 JUMP_ABSOLUTE            3\n        >>   18 POP_BLOCK\n        >>   19 LOAD_CONST               0 (None)\n             22 RETURN_VALUE\n", nil, ""},
	{"while a:\n b = c\nelse:\n b = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x16\x00\x65\x00\x00\x72\x12\x00\x65\x01\x00\x5a\x02\x00\x71\x03\x00\x57\x65\x03\x00\x5a\x02\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "c", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x0a\x02",
	}, "  1           0 SETUP_LOOP              22 (to 25)\n        >>    3 LOAD_NAME                0 (a)\n              6 POP_JUMP_IF_FALSE       18\n\n  2           9 LOAD_NAME                1 (c)\n             12 STORE_NAME               2 (b)\n             15 JUMP_ABSOLUTE            3\n        >>   18 POP_BLOCK\n\n  4          19 LOAD_NAME                3 (d)\n             22 STORE_NAME               2 (b)\n        >>   25 LOAD_CONST               0 (None)\n             28 RETURN_VALUE\n", nil, ""},
	{"while a:\n if b: break\n b = c\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x1a\x00\x65\x00\x00\x72\x1c\x00\x65\x01\x00\x72\x13\x00\x50\x6e\x00\x00\x65\x02\x00\x5a\x01\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x06\x00\x04\x01",
	}, "  1           0 SETUP_LOOP              26 (to 29)\n        >>    3 LOAD_NAME                0 (a)\n              6 POP_JUMP_IF_FALSE       28\n\n  2           9 LOAD_NAME                1 (b)\n             12 POP_JUMP_IF_FALSE       19\n             15 BREAK_LOOP\n             16 JUMP_FORWARD             0 (to 19)\n\n  3     >>   19 LOAD_NAME                2 (c)\n             22 STORE_NAME               1 (b)\n             25 JUMP_ABSOLUTE            3\n        >>   28 POP_BLOCK\n        >>   29 LOAD_CONST               0 (None)\n             32 RETURN_VALUE\n", nil, ""},
	{"while a:\n if b: continue\n b = c\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x78\x1c\x00\x65\x00\x00\x72\x1e\x00\x65\x01\x00\x72\x15\x00\x71\x03\x00\x6e\x00\x00\x65\x02\x00\x5a\x01\x00\x71\x03\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x09\x01\x06\x00\x06\x01",
	}, "  1           0 SETUP_LOOP              28 (to 31)\n        >>    3 LOAD_NAME                0 (a)\n              6 POP_JUMP_IF_FALSE       30\n\n  2           9 LOAD_NAME                1 (b)\n             12 POP_JUMP_IF_FALSE       21\n             15 JUMP_ABSOLUTE            3\n             18 JUMP_FORWARD             0 (to 21)\n\n  3     >>   21 LOAD_NAME                2 (c)\n             24 STORE_NAME               1 (b)\n             27 JUMP_ABSOLUTE            3\n        >>   30 POP_BLOCK\n        >>   31 LOAD_CONST               0 (None)\n             34 RETURN_VALUE\n", nil, ""},
	{"continue", "exec", nil, "", py.SyntaxError, "'continue' not properly in loop"},
	{"break", "exec", nil, "", py.SyntaxError, "'break' outside loop"},
	{"for a in b: pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x0e\x00\x65\x00\x00\x44\x5d\x06\x00\x5a\x01\x00\x71\x07\x00\x57\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x00",
	}, "  1           0 SETUP_LOOP              14 (to 17)\n              3 LOAD_NAME                0 (b)\n              6 GET_ITER\n        >>    7 FOR_ITER                 6 (to 16)\n             10 STORE_NAME               1 (a)\n             13 JUMP_ABSOLUTE            7\n        >>   16 POP_BLOCK\n        >>   17 LOAD_CONST               0 (None)\n             20 RETURN_VALUE\n", nil, ""},
	{"for a in b:\n if a:\n  break\n c = e\nelse: c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x24\x00\x65\x00\x00\x44\x5d\x16\x00\x5a\x01\x00\x65\x01\x00\x72\x17\x00\x50\x6e\x00\x00\x65\x02\x00\x5a\x03\x00\x71\x07\x00\x57\x65\x04\x00\x5a\x03\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a", "e", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x01\x06\x01\x04\x01\x0a\x01",
	}, "  1           0 SETUP_LOOP              36 (to 39)\n              3 LOAD_NAME                0 (b)\n              6 GET_ITER\n        >>    7 FOR_ITER                22 (to 32)\n             10 STORE_NAME               1 (a)\n\n  2          13 LOAD_NAME                1 (a)\n             16 POP_JUMP_IF_FALSE       23\n\n  3          19 BREAK_LOOP\n             20 JUMP_FORWARD             0 (to 23)\n\n  4     >>   23 LOAD_NAME                2 (e)\n             26 STORE_NAME               3 (c)\n             29 JUMP_ABSOLUTE            7\n        >>   32 POP_BLOCK\n\n  5          33 LOAD_NAME                4 (d)\n             36 STORE_NAME               3 (c)\n        >>   39 LOAD_CONST               0 (None)\n             42 RETURN_VALUE\n", nil, ""},
	{"for a in b:\n if a:\n  continue\n c = e\nelse: c = d\n", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x78\x26\x00\x65\x00\x00\x44\x5d\x18\x00\x5a\x01\x00\x65\x01\x00\x72\x19\x00\x71\x07\x00\x6e\x00\x00\x65\x02\x00\x5a\x03\x00\x71\x07\x00\x57\x65\x04\x00\x5a\x03\x00\x64\x00\x00\x53",
		Consts:         []py.Object{py.None},
		Names:          []string{"b", "a", "e", "c", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "\x0d\x01\x06\x01\x06\x01\x0a\x01",
	}, "  1           0 SETUP_LOOP              38 (to 41)\n              3 LOAD_NAME                0 (b)\n              6 GET_ITER\n        >>    7 FOR_ITER                24 (to 34)\n             10 STORE_NAME               1 (a)\n\n  2          13 LOAD_NAME                1 (a)\n             16 POP_JUMP_IF_FALSE       25\n\n  3          19 JUMP_ABSOLUTE            7\n             22 JUMP_FORWARD             0 (to 25)\n\n  4     >>   25 LOAD_NAME                2 (e)\n             28 STORE_NAME               3 (c)\n             31 JUMP_ABSOLUTE            7\n        >>   34 POP_BLOCK\n\n  5          35 LOAD_NAME                4 (d)\n             38 STORE_NAME               3 (c)\n        >>   41 LOAD_CONST               0 (None)\n             44 RETURN_VALUE\n", nil, ""},
	{"f()", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x65\x00\x00\x83\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 CALL_FUNCTION            0 (0 positional, 0 keyword pair)\n              6 RETURN_VALUE\n", nil, ""},
	{"f(a)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x83\x01\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 CALL_FUNCTION            1 (1 positional, 0 keyword pair)\n              9 RETURN_VALUE\n", nil, ""},
	{"f(a,b,c)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x83\x03\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a", "b", "c"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 LOAD_NAME                2 (b)\n              9 LOAD_NAME                3 (c)\n             12 CALL_FUNCTION            3 (3 positional, 0 keyword pair)\n             15 RETURN_VALUE\n", nil, ""},
	{"f(A=a)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x64\x00\x00\x65\x01\x00\x83\x00\x01\x53",
		Consts:         []py.Object{py.String("A")},
		Names:          []string{"f", "a"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_CONST               0 ('A')\n              6 LOAD_NAME                1 (a)\n              9 CALL_FUNCTION          256 (0 positional, 1 keyword pair)\n             12 RETURN_VALUE\n", nil, ""},
	{"f(a, b, C=d, D=d)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      7,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x64\x00\x00\x65\x03\x00\x64\x01\x00\x65\x03\x00\x83\x02\x02\x53",
		Consts:         []py.Object{py.String("C"), py.String("D")},
		Names:          []string{"f", "a", "b", "d"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 LOAD_NAME                2 (b)\n              9 LOAD_CONST               0 ('C')\n             12 LOAD_NAME                3 (d)\n             15 LOAD_CONST               1 ('D')\n             18 LOAD_NAME                3 (d)\n             21 CALL_FUNCTION          514 (2 positional, 2 keyword pair)\n             24 RETURN_VALUE\n", nil, ""},
	{"f(*args)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x8c\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "args"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (args)\n              6 CALL_FUNCTION_VAR        0 (0 positional, 0 keyword pair)\n              9 RETURN_VALUE\n", nil, ""},
	{"f(*args, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      3,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x8e\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "args", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (args)\n              6 LOAD_NAME                2 (kwargs)\n              9 CALL_FUNCTION_VAR_KW     0 (0 positional, 0 keyword pair)\n             12 RETURN_VALUE\n", nil, ""},
	{"f(**kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x8d\x00\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (kwargs)\n              6 CALL_FUNCTION_KW         0 (0 positional, 0 keyword pair)\n              9 RETURN_VALUE\n", nil, ""},
	{"f(a, b, *args)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x65\x03\x00\x8c\x02\x00\x53",
		Consts:         []py.Object{},
		Names:          []string{"f", "a", "b", "args"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 LOAD_NAME                2 (b)\n              9 LOAD_NAME                3 (args)\n             12 CALL_FUNCTION_VAR        2 (2 positional, 0 keyword pair)\n             15 RETURN_VALUE\n", nil, ""},
	{"f(a, b, *args, d=e, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      7,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x65\x02\x00\x64\x00\x00\x65\x03\x00\x65\x04\x00\x65\x05\x00\x8e\x02\x01\x53",
		Consts:         []py.Object{py.String("d")},
		Names:          []string{"f", "a", "b", "e", "args", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 LOAD_NAME                2 (b)\n              9 LOAD_CONST               0 ('d')\n             12 LOAD_NAME                3 (e)\n             15 LOAD_NAME                4 (args)\n             18 LOAD_NAME                5 (kwargs)\n             21 CALL_FUNCTION_VAR_KW   258 (2 positional, 1 keyword pair)\n             24 RETURN_VALUE\n", nil, ""},
	{"f(a, d=e, **kwargs)", "eval", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      5,
		Flags:          64,
		Code:           "\x65\x00\x00\x65\x01\x00\x64\x00\x00\x65\x02\x00\x65\x03\x00\x8d\x01\x01\x53",
		Consts:         []py.Object{py.String("d")},
		Names:          []string{"f", "a", "e", "kwargs"},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_NAME                0 (f)\n              3 LOAD_NAME                1 (a)\n              6 LOAD_CONST               0 ('d')\n              9 LOAD_NAME                2 (e)\n             12 LOAD_NAME                3 (kwargs)\n             15 CALL_FUNCTION_KW       257 (1 positional, 1 keyword pair)\n             18 RETURN_VALUE\n", nil, ""},
	{"def fn(): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       0,
			Kwonlyargcount: 0,
			Nlocals:        0,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 (<code object fn at 0x7fe7341918a0, file \"<string>\", line 1>)\n              3 LOAD_CONST               1 ('fn')\n              6 MAKE_FUNCTION            0\n              9 STORE_NAME               0 (fn)\n             12 LOAD_CONST               2 (None)\n             15 RETURN_VALUE\n", nil, ""},
	{"def fn(a): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       1,
			Kwonlyargcount: 0,
			Nlocals:        1,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 (<code object fn at 0x7fe73567c6f0, file \"<string>\", line 1>)\n              3 LOAD_CONST               1 ('fn')\n              6 MAKE_FUNCTION            0\n              9 STORE_NAME               0 (fn)\n             12 LOAD_CONST               2 (None)\n             15 RETURN_VALUE\n", nil, ""},
	{"def fn(a,b,c): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x84\x00\x00\x5a\x00\x00\x64\x02\x00\x53",
		Consts: []py.Object{&py.Code{
			Argcount:       3,
			Kwonlyargcount: 0,
			Nlocals:        3,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 (<code object fn at 0x7fe734191db0, file \"<string>\", line 1>)\n              3 LOAD_CONST               1 ('fn')\n              6 MAKE_FUNCTION            0\n              9 STORE_NAME               0 (fn)\n             12 LOAD_CONST               2 (None)\n             15 RETURN_VALUE\n", nil, ""},
	{"def fn(a,b=1,c=2): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      4,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x84\x02\x00\x5a\x00\x00\x64\x04\x00\x53",
		Consts: []py.Object{py.Int(1), py.Int(2), &py.Code{
			Argcount:       3,
			Kwonlyargcount: 0,
			Nlocals:        3,
			Stacksize:      1,
			Flags:          67,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 LOAD_CONST               1 (2)\n              6 LOAD_CONST               2 (<code object fn at 0x7fe7341b68a0, file \"<string>\", line 1>)\n              9 LOAD_CONST               3 ('fn')\n             12 MAKE_FUNCTION            2\n             15 STORE_NAME               0 (fn)\n             18 LOAD_CONST               4 (None)\n             21 RETURN_VALUE\n", nil, ""},
	{"def fn(a,*arg,b=1,c=2): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      6,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x84\x00\x02\x5a\x00\x00\x64\x06\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        4,
			Stacksize:      1,
			Flags:          71,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 ('b')\n              3 LOAD_CONST               1 (1)\n              6 LOAD_CONST               2 ('c')\n              9 LOAD_CONST               3 (2)\n             12 LOAD_CONST               4 (<code object fn at 0x7fe7341918a0, file \"<string>\", line 1>)\n             15 LOAD_CONST               5 ('fn')\n             18 MAKE_FUNCTION          512\n             21 STORE_NAME               0 (fn)\n             24 LOAD_CONST               6 (None)\n             27 RETURN_VALUE\n", nil, ""},
	{"def fn(a,*arg,b=1,c=2,**kwargs): pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      6,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x84\x00\x02\x5a\x00\x00\x64\x06\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        5,
			Stacksize:      1,
			Flags:          79,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg", "kwargs"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 ('b')\n              3 LOAD_CONST               1 (1)\n              6 LOAD_CONST               2 ('c')\n              9 LOAD_CONST               3 (2)\n             12 LOAD_CONST               4 (<code object fn at 0x7fe73567c6f0, file \"<string>\", line 1>)\n             15 LOAD_CONST               5 ('fn')\n             18 MAKE_FUNCTION          512\n             21 STORE_NAME               0 (fn)\n             24 LOAD_CONST               6 (None)\n             27 RETURN_VALUE\n", nil, ""},
	{"def fn(a:\"a\",*arg:\"arg\",b:\"b\"=1,c:\"c\"=2,**kwargs:\"kw\") -> \"ret\": pass", "exec", &py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      13,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x64\x02\x00\x64\x03\x00\x64\x04\x00\x64\x05\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x64\x07\x00\x64\x08\x00\x64\x09\x00\x64\x0a\x00\x90\x07\x00\x84\x00\x02\x5a\x00\x00\x64\x0b\x00\x53",
		Consts: []py.Object{py.String("b"), py.Int(1), py.String("c"), py.Int(2), py.String("a"), py.String("arg"), py.String("kw"), py.String("ret"), py.Tuple{py.String("a"), py.String("arg"), py.String("b"), py.String("c"), py.String("kwargs"), py.String("return")}, &py.Code{
			Argcount:       1,
			Kwonlyargcount: 2,
			Nlocals:        5,
			Stacksize:      1,
			Flags:          79,
			Code:           "\x64\x00\x00\x53",
			Consts:         []py.Object{py.None},
			Names:          []string{},
			Varnames:       []string{"a", "b", "c", "arg", "kwargs"},
			Freevars:       []string{},
			Cellvars:       []string{},
			Filename:       "<string>",
			Name:           "fn",
			Firstlineno:    1,
			Lnotab:         "",
		}, py.String("fn"), py.None},
		Names:       []string{"fn"},
		Varnames:    []string{},
		Freevars:    []string{},
		Cellvars:    []string{},
		Filename:    "<string>",
		Name:        "<module>",
		Firstlineno: 1,
		Lnotab:      "",
	}, "  1           0 LOAD_CONST               0 ('b')\n              3 LOAD_CONST               1 (1)\n              6 LOAD_CONST               2 ('c')\n              9 LOAD_CONST               3 (2)\n             12 LOAD_CONST               4 ('a')\n             15 LOAD_CONST               5 ('arg')\n             18 LOAD_CONST               0 ('b')\n             21 LOAD_CONST               2 ('c')\n             24 LOAD_CONST               6 ('kw')\n             27 LOAD_CONST               7 ('ret')\n             30 LOAD_CONST               8 (('a', 'arg', 'b', 'c', 'kwargs', 'return'))\n             33 LOAD_CONST               9 (<code object fn at 0x7fe734191db0, file \"<string>\", line 1>)\n             36 LOAD_CONST              10 ('fn')\n             39 EXTENDED_ARG             7\n             42 MAKE_FUNCTION        459264\n             45 STORE_NAME               0 (fn)\n             48 LOAD_CONST              11 (None)\n             51 RETURN_VALUE\n", nil, ""},
}
