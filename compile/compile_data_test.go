// Test data generated by make_compile_test.py - do not edit

package compile

import (
	"github.com/ncw/gpython/py"
)

var compileTestData = []struct {
	in   string
	mode string // exec, eval or single
	out  py.Code
	dis  string
}{
	{"1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 (1)\n              3 RETURN_VALUE\n"},
	{"\"hello\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      1,
		Flags:          64,
		Code:           "\x64\x00\x00\x53",
		Consts:         []py.Object{py.String("hello")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('hello')\n              3 RETURN_VALUE\n"},
	{"\"a\"+1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x17\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_ADD\n              7 RETURN_VALUE\n"},
	{"\"a\"-1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x18\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_SUBTRACT\n              7 RETURN_VALUE\n"},
	{"\"a\"*\"b\"", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x14\x53",
		Consts:         []py.Object{py.String("a"), py.String("b")},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 ('b')\n              6 BINARY_MULTIPLY\n              7 RETURN_VALUE\n"},
	{"\"a\"/1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1b\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_TRUE_DIVIDE\n              7 RETURN_VALUE\n"},
	{"\"a\"%1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x16\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_MODULO\n              7 RETURN_VALUE\n"},
	{"\"a\"**1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x13\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_POWER\n              7 RETURN_VALUE\n"},
	{"\"a\"<<1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3e\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_LSHIFT\n              7 RETURN_VALUE\n"},
	{"\"a\">>1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x3f\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_RSHIFT\n              7 RETURN_VALUE\n"},
	{"\"a\"|1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x42\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_OR\n              7 RETURN_VALUE\n"},
	{"\"a\"^1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x41\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_XOR\n              7 RETURN_VALUE\n"},
	{"\"a\"&1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x40\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_AND\n              7 RETURN_VALUE\n"},
	{"\"a\"//1", "eval", py.Code{
		Argcount:       0,
		Kwonlyargcount: 0,
		Nlocals:        0,
		Stacksize:      2,
		Flags:          64,
		Code:           "\x64\x00\x00\x64\x01\x00\x1a\x53",
		Consts:         []py.Object{py.String("a"), py.Int(1)},
		Names:          []string{},
		Varnames:       []string{},
		Freevars:       []string{},
		Cellvars:       []string{},
		Filename:       "<string>",
		Name:           "<module>",
		Firstlineno:    1,
		Lnotab:         "",
	}, "  1           0 LOAD_CONST               0 ('a')\n              3 LOAD_CONST               1 (1)\n              6 BINARY_FLOOR_DIVIDE\n              7 RETURN_VALUE\n"},
}
